// Database configuration
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  profile   Json?     // Stores Google profile data
  tokens    Json?     // Stores OAuth tokens
  calendarId String?
  enabled   Boolean   @default(true)
  subscription Json?

  // Relations
  userLocations UserLocation[]
  userSpots     UserSpot[]

  @@map("users")
}

model LocationWithSpots {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  spots  Json[] // Array of spot objects with name and id

  // Relations
  userLocations UserLocation[]

  @@map("locationsWithSpots")
}

model UserLocation {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  userId       String          @db.ObjectId
  locationId   String          @db.ObjectId
  locationName String
  enabled      Boolean         @default(true)
  spots        Json[]          // Array of spot objects with name, id, and enabled status

  // Relations
  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  location     LocationWithSpots @relation(fields: [locationId], references: [id], onDelete: Cascade)

  @@unique([userId, locationId])
  @@map("userLocations")
}

model UserSpot {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  summary     String
  description String
  start       DateTime
  end         DateTime
  userId      String   @db.ObjectId

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("userSpots")
}

